"""EquipmentFixes

Revision ID: 1ea6e23e4421
Revises: 116182a2a4d1
Create Date: 2025-02-01 23:26:22.481236

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1ea6e23e4421'
down_revision: Union[str, None] = '116182a2a4d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("equipment") as batch_op:
        batch_op.alter_column("serial_number",
                              existing_type=sa.String(),
                              type_=sa.String(255))
        
    with op.batch_alter_table("equipment") as batch_op:
        batch_op.alter_column("inventory_number",
                              existing_type=sa.String(),
                              type_=sa.String(255))
    
    with op.batch_alter_table("equipment_types") as batch_op:
        batch_op.create_unique_constraint("uq_equipment_types_type_name", ["type_name"])


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    with op.batch_alter_table('equipment_types', schema=None) as batch_op:
        batch_op.drop_constraint('uq_equipment_type_name', type_='unique')
    
    op.alter_column('equipment', 'inventory_number',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('equipment', 'serial_number',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###