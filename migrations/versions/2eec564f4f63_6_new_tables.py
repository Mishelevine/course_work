"""6 new tables

Revision ID: 2eec564f4f63
Revises: 7f2c87b2c8b6
Create Date: 2025-01-22 22:44:15.648097

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2eec564f4f63'
down_revision: Union[str, None] = '7f2c87b2c8b6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('buildings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('building_address', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('building_address')
    )
    op.create_table('equipment_status_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status_type_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('status_type_name')
    )
    op.create_table('equipment_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('responsible_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('paternity', sa.String(), nullable=True),
    sa.Column('job', sa.String(), nullable=False),
    sa.Column('office', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('serial_number', sa.Integer(), nullable=False),
    sa.Column('inventory_number', sa.Integer(), nullable=False),
    sa.Column('network_name', sa.String(), nullable=False),
    sa.Column('remarks', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['equipment_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment_statuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('status_type_id', sa.Integer(), nullable=False),
    sa.Column('doc_number', sa.Integer(), nullable=False),
    sa.Column('status_change_date', sa.DateTime(), nullable=False),
    sa.Column('responsible_user_id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('audience_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['responsible_users.id'], ),
    sa.ForeignKeyConstraint(['status_type_id'], ['equipment_status_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('equipment_statuses')
    op.drop_table('equipment')
    op.drop_table('responsible_users')
    op.drop_table('equipment_types')
    op.drop_table('equipment_status_types')
    op.drop_table('buildings')
    # ### end Alembic commands ###
